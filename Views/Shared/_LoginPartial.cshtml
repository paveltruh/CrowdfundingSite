@using Microsoft.AspNetCore.Identity
@using WebApplication1.Models
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

    <ul class="navbar-nav">
        @if (SignInManager.IsSignedIn(User))
        {
            <li class="nav-item">
                <a id="manage" class="nav-link text-dark" asp-controller="Account" asp-action="Companies" asp-route-id="@((await UserManager.GetUserAsync(User)).UserName)" title="Manage">Hello @((await UserManager.GetUserAsync(User)).UserName)!</a>
            </li>
            @if (User.IsInRole("admin"))
            {
                <li class="nav-item">
                    <a class="nav-link text-dark" id="users" asp-controller="Users" asp-action="Index">All Users</a>
                </li>
            }
            <li class="nav-item">
                <form id="logoutForm" class="form-inline" asp-controller="Auth" asp-action="LogOff" asp-route-returnUrl="@Url.Action("Index", "Home")">
                    <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
                </form>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link text-dark" id="register" asp-controller="Auth" asp-action="Register" >Register</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" id="login" asp-controller="Auth" asp-action="Login"  asp-route-returnUrl="@Context.Request.Path">Login</a>
            </li>
        }
    </ul>
